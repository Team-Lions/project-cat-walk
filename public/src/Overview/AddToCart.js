import React from 'react';
import SizeSelector from './SizeSelector.jsx';
import QuantitySelector from './QuantitySelector.jsx';

class AddToCart extends React.Component {
  //expects props to contain object called skus
  constructor(props) {
    super(props);
    this.state = {
      sizeFirstSkus: {},
      sizes: [],
      sizeSelection: '',
      quantityEnabled: false,
      quantityAvailable: 0,
      quantitySelection: null
    };
  }

  changeSize(e) {
    // if this is the first slection away formthe default, remove "Select Size as an option"
    if (document.getElementById('size').options[0].value === 'Select Size') {
      document.getElementById('size').remove(0);
    }

    var newSize = e.target.value;
    document.getElementById('quantity').value = 1;
    this.setState({
      sizeSelection: newSize,
      quantityEnabled: true,
      quantityAvailable: this.state.sizeFirstSkus[newSize].quantity,
      quantitySelection: 1
    });
  }

  changeQuantity(e) {
    var newQuantity = e.target.value;
    this.setState({
      quantitySelection: newQuantity
    });
  }

  addToCart(e) {//event handler passed into the button
    //will have different functionality based on the current state
  }

  componentDidMount() {
    //populates sizeFirstSkus and sizes objects
    var sizeFirstSkus = {};
    var size, quantity;

    for (var k in this.props.skus) {
      size = this.props.skus[k].size;
      quantity = this.props.skus[k].quantity;
      sizeFirstSkus[size] = {
        skuId: k,
        quantity: quantity
      };
    }

    this.setState({
      sizeFirstSkus: sizeFirstSkus,
      sizes: Object.keys(sizeFirstSkus)
    });
  }

  render() {
    return /*#__PURE__*/React.createElement("div", null, this.state.sizes.length === 0 ? /*#__PURE__*/React.createElement("select", {
      id: "size",
      name: "size",
      disabled: true
    }, /*#__PURE__*/React.createElement("option", null, "OUT OF STOCK")) : /*#__PURE__*/React.createElement(SizeSelector, {
      sizes: this.state.sizes,
      change: this.changeSize.bind(this)
    }), this.state.quantityEnabled ? /*#__PURE__*/React.createElement(QuantitySelector, {
      quantityAvailable: this.state.quantityAvailable,
      change: this.changeQuantity.bind(this)
    }) : /*#__PURE__*/React.createElement("select", {
      id: "quantity",
      name: "quantity",
      disabled: true
    }, /*#__PURE__*/React.createElement("option", null, "-")));
  }

}

;
export default AddToCart;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2NsaWVudC9zcmMvT3ZlcnZpZXcvQWRkVG9DYXJ0LmpzeCJdLCJuYW1lcyI6WyJSZWFjdCIsIlNpemVTZWxlY3RvciIsIlF1YW50aXR5U2VsZWN0b3IiLCJBZGRUb0NhcnQiLCJDb21wb25lbnQiLCJjb25zdHJ1Y3RvciIsInByb3BzIiwic3RhdGUiLCJzaXplRmlyc3RTa3VzIiwic2l6ZXMiLCJzaXplU2VsZWN0aW9uIiwicXVhbnRpdHlFbmFibGVkIiwicXVhbnRpdHlBdmFpbGFibGUiLCJxdWFudGl0eVNlbGVjdGlvbiIsImNoYW5nZVNpemUiLCJlIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsIm9wdGlvbnMiLCJ2YWx1ZSIsInJlbW92ZSIsIm5ld1NpemUiLCJ0YXJnZXQiLCJzZXRTdGF0ZSIsInF1YW50aXR5IiwiY2hhbmdlUXVhbnRpdHkiLCJuZXdRdWFudGl0eSIsImFkZFRvQ2FydCIsImNvbXBvbmVudERpZE1vdW50Iiwic2l6ZSIsImsiLCJza3VzIiwic2t1SWQiLCJPYmplY3QiLCJrZXlzIiwicmVuZGVyIiwibGVuZ3RoIiwiYmluZCJdLCJtYXBwaW5ncyI6IkFBQUEsT0FBT0EsS0FBUCxNQUFrQixPQUFsQjtBQUNBLE9BQU9DLFlBQVAsTUFBeUIsb0JBQXpCO0FBQ0EsT0FBT0MsZ0JBQVAsTUFBNkIsd0JBQTdCOztBQUVBLE1BQU1DLFNBQU4sU0FBd0JILEtBQUssQ0FBQ0ksU0FBOUIsQ0FBd0M7QUFDdEM7QUFDQUMsRUFBQUEsV0FBVyxDQUFDQyxLQUFELEVBQVE7QUFDakIsVUFBTUEsS0FBTjtBQUNBLFNBQUtDLEtBQUwsR0FBYTtBQUNYQyxNQUFBQSxhQUFhLEVBQUUsRUFESjtBQUVYQyxNQUFBQSxLQUFLLEVBQUUsRUFGSTtBQUdYQyxNQUFBQSxhQUFhLEVBQUUsRUFISjtBQUlYQyxNQUFBQSxlQUFlLEVBQUUsS0FKTjtBQUtYQyxNQUFBQSxpQkFBaUIsRUFBRSxDQUxSO0FBTVhDLE1BQUFBLGlCQUFpQixFQUFF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d0NBREYsQ0FYSixDQURGO0FBbUJEOztBQS9FcUM7O0FBZ0Z2QztBQUVELGVBQWVsQyxTQUFmIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBTaXplU2VsZWN0b3IgZnJvbSAnLi9TaXplU2VsZWN0b3IuanN4JztcbmltcG9ydCBRdWFudGl0eVNlbGVjdG9yIGZyb20gJy4vUXVhbnRpdHlTZWxlY3Rvci5qc3gnO1xuXG5jbGFzcyBBZGRUb0NhcnQgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAvL2V4cGVjdHMgcHJvcHMgdG8gY29udGFpbiBvYmplY3QgY2FsbGVkIHNrdXNcbiAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICBzdXBlcihwcm9wcyk7XG4gICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgIHNpemVGaXJzdFNrdXM6IHt9LFxuICAgICAgc2l6ZXM6IFtdLFxuICAgICAgc2l6ZVNlbGVjdGlvbjogJycsXG4gICAgICBxdWFudGl0eUVuYWJsZWQ6IGZhbHNlLFxuICAgICAgcXVhbnRpdHlBdmFpbGFibGU6IDAsXG4gICAgICBxdWFudGl0eVNlbGVjdGlvbjogbnVsbFxuICAgIH07XG4gIH1cblxuICBjaGFuZ2VTaXplKGUpIHtcbiAgICAvLyBpZiB0aGlzIGlzIHRoZSBmaXJzdCBzbGVjdGlvbiBhd2F5IGZvcm10aGUgZGVmYXVsdCwgcmVtb3ZlIFwiU2VsZWN0IFNpemUgYXMgYW4gb3B0aW9uXCJcbiAgICBpZihkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc2l6ZScpLm9wdGlvbnNbMF0udmFsdWUgPT09ICdTZWxlY3QgU2l6ZScpIHtcbiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdzaXplJykucmVtb3ZlKDApO1xuICAgIH1cbiAgICB2YXIgbmV3U2l6ZSA9IGUudGFyZ2V0LnZhbHVlO1xuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdxdWFudGl0eScpLnZhbHVlID0gMTtcbiAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgIHNpemVTZWxlY3Rpb246IG5ld1NpemUsXG4gICAgICBxdWFudGl0eUVuYWJsZWQ6IHRydWUsXG4gICAgICBxdWFudGl0eUF2YWlsYWJsZTogdGhpcy5zdGF0ZS5zaXplRmlyc3RTa3VzW25ld1NpemVdLnF1YW50aXR5LFxuICAgICAgcXVhbnRpdHlTZWxlY3Rpb246IDFcbiAgICB9KTtcbiAgfVxuXG4gIGNoYW5nZVF1YW50aXR5KGUpIHtcbiAgICB2YXIgbmV3UXVhbnRpdHkgPSBlLnRhcmdldC52YWx1ZTtcbiAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgIHF1YW50aXR5U2VsZWN0aW9uOiBuZXdRdWFudGl0eVxuICAgIH0pO1xuICB9XG5cbiAgYWRkVG9DYXJ0KGUpIHtcbiAgICAvL2V2ZW50IGhhbmRsZXIgcGFzc2VkIGludG8gdGhlIGJ1dHRvblxuICAgIC8vd2lsbCBoYXZlIGRpZmZlcmVudCBmdW5jdGlvbmFsaXR5IGJhc2VkIG9uIHRoZSBjdXJyZW50IHN0YXRlXG4gIH1cblxuICBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICAvL3BvcHVsYXRlcyBzaXplRmlyc3RTa3VzIGFuZCBzaXplcyBvYmplY3RzXG4gICAgdmFyIHNpemVGaXJzdFNrdXMgPSB7fTtcbiAgICB2YXIgc2l6ZSwgcXVhbnRpdHk7XG4gICAgZm9yICh2YXIgayBpbiB0aGlzLnByb3BzLnNrdXMpIHtcbiAgICAgIHNpemUgPSB0aGlzLnByb3BzLnNrdXNba10uc2l6ZTtcbiAgICAgIHF1YW50aXR5ID0gdGhpcy5wcm9wcy5za3VzW2tdLnF1YW50aXR5O1xuICAgICAgc2l6ZUZpcnN0U2t1c1tzaXplXSA9IHtcbiAgICAgICAgc2t1SWQ6IGssXG4gICAgICAgIHF1YW50aXR5OiBxdWFudGl0eVxuICAgICAgfTtcbiAgICB9XG4gICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICBzaXplRmlyc3RTa3VzOiBzaXplRmlyc3RTa3VzLFxuICAgICAgc2l6ZXM6IE9iamVjdC5rZXlzKHNpemVGaXJzdFNrdXMpXG4gICAgfSk7XG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXY+XG4gICAgICAgIHt0aGlzLnN0YXRlLnNpemVzLmxlbmd0aCA9PT0gMCA/XG4gICAgICAgICAgPHNlbGVjdCBpZD1cInNpemVcIiBuYW1lPVwic2l6ZVwiIGRpc2FibGVkPlxuICAgICAgICAgICAgPG9wdGlvbj5PVVQgT0YgU1RPQ0s8L29wdGlvbj5cbiAgICAgICAgICA8L3NlbGVjdD5cbiAgICAgICAgICA6XG4gICAgICAgICAgPFNpemVTZWxlY3RvciBzaXplcz17dGhpcy5zdGF0ZS5zaXplc30gY2hhbmdlPXt0aGlzLmNoYW5nZVNpemUuYmluZCh0aGlzKX0vPlxuICAgICAgICB9XG4gICAgICAgIHt0aGlzLnN0YXRlLnF1YW50aXR5RW5hYmxlZCA/XG4gICAgICAgICAgPFF1YW50aXR5U2VsZWN0b3IgcXVhbnRpdHlBdmFpbGFibGU9e3RoaXMuc3RhdGUucXVhbnRpdHlBdmFpbGFibGV9IGNoYW5nZT17dGhpcy5jaGFuZ2VRdWFudGl0eS5iaW5kKHRoaXMpfS8+XG4gICAgICAgICAgOlxuICAgICAgICAgIDxzZWxlY3QgaWQ9XCJxdWFudGl0eVwiIG5hbWU9XCJxdWFudGl0eVwiIGRpc2FibGVkPlxuICAgICAgICAgICAgPG9wdGlvbj4tPC9vcHRpb24+XG4gICAgICAgICAgPC9zZWxlY3Q+XG4gICAgICAgIH1cbiAgICAgICAgey8qYnV0dG9uIGdvZXMgaGVyZSovfVxuICAgICAgPC9kaXY+XG4gICAgKVxuICB9XG59O1xuXG5leHBvcnQgZGVmYXVsdCBBZGRUb0NhcnQ7Il19